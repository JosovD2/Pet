apiVersion: v1
kind: Namespace
metadata:
  name: monitoring

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx
  namespace: monitoring
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
      - name: nginx
        image: josovd2/pet:1.1
        ports:
        - containerPort: 80

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus
  namespace: monitoring
spec:
  replicas: 1
  selector:
    matchLabels:
      app: prometheus
  template:
    metadata:
      labels:
        app: prometheus
    spec:
      containers:
      - name: prometheus
        image: prom/prometheus:v2.30.0
        ports:
        - containerPort: 9090
        volumeMounts:
        - name: prometheus-config
          mountPath: /etc/prometheus/prometheus.yml
          subPath: prometheus.yml
      volumes:
      - name: prometheus-config
        configMap:
          name: prometheus-config

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-config
  namespace: monitoring
data:
  prometheus.yml: |
    global:
      scrape_interval: 15s
    scrape_configs:
      - job_name: 'nginx'
        static_configs:
          - targets: ['nginx.monitoring.svc.cluster.local:80']

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
  namespace: monitoring
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
    spec:
      containers:
      - name: grafana
        image: grafana/grafana:9.5.0
        ports:
        - containerPort: 3000

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: loki
  namespace: monitoring
spec:
  replicas: 1
  selector:
    matchLabels:
      app: loki
  template:
    metadata:
      labels:
        app: loki
    spec:
      containers:
      - name: loki
        image: grafana/loki:2.7.0
        ports:
        - containerPort: 3100
        volumeMounts:
        - name: loki-config
          mountPath: /etc/loki/local-config.yaml
          subPath: local-config.yaml
      volumes:
      - name: loki-config
        configMap:
          name: loki-config

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: loki-config
  namespace: monitoring
data:
  local-config.yaml: |
    server:
      http_listen_port: 3100
    ingester:
      lifecycler:
        ring:
          kvstore:
            store: inmemory
    schema_config:
      configs:
        - from: 2020-10-10
          store: boltdb-shipper
          object_store: s3
          schema: v11
          index:
            prefix: loki_index_
            period: 168h
    storage_config:
      boltdb-shipper:
        shared_store: filesystem

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: promtail
  namespace: monitoring
spec:
  replicas: 1
  selector:
    matchLabels:
      app: promtail
  template:
    metadata:
      labels:
        app: promtail
    spec:
      containers:
      - name: promtail
        image: grafana/promtail:2.7.0
        ports:
        - containerPort: 9080
        volumeMounts:
        - name: promtail-config
          mountPath: /etc/promtail/config.yaml
          subPath: config.yaml
        - name: varlog
          mountPath: /var/log
        - name: tmp
          mountPath: /tmp
      volumes:
      - name: promtail-config
        configMap:
          name: promtail-config
      - name: varlog
        hostPath:
          path: /var/log
      - name: tmp
        hostPath:
          path: /tmp

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: promtail-config
  namespace: monitoring
data:
  config.yaml: |
    server:
      http_listen_port: 9080
    positions:
      filename: /var/log/promtail_positions.yaml
    clients:
      - url: http://loki.monitoring.svc.cluster.local:3100/loki/api/v1/push
    scrape_configs:
      - job_name: system
        static_configs:
          - targets:
              - localhost
            labels:
              job: varlogs
              __path__: /var/log/*.log

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: cadvisor
  namespace: monitoring
spec:
  replicas: 1
  selector:
    matchLabels:
      app: cadvisor
  template:
    metadata:
      labels:
        app: cadvisor
    spec:
      containers:
      - name: cadvisor
        image: gcr.io/cadvisor/cadvisor:latest
        ports:
        - containerPort: 8080
        volumeMounts:
        - name: rootfs
          mountPath: /rootfs
        - name: varrun
          mountPath: /var/run
        - name: sys
          mountPath: /sys
        - name: varlibdocker
          mountPath: /var/lib/docker
        - name: etc-localtime
          mountPath: /etc/localtime
        - name: etc-timezone
          mountPath: /etc/timezone
      volumes:
      - name: rootfs
        hostPath:
          path: /
      - name: varrun
        hostPath:
          path: /var/run
      - name: sys
        hostPath:
          path: /sys
      - name: varlibdocker
        hostPath:
          path: /var/lib/docker
      - name: etc-localtime
        hostPath:
          path: /etc/localtime
      - name: etc-timezone
        hostPath:
          path: /etc/timezone

---


apiVersion: v1
kind: Service
metadata:
  name: prometheus
  namespace: monitoring
spec:
  ports:
  - port: 9090
    targetPort: 9090
  selector:
    app: prometheus
  type: ClusterIP

---

apiVersion: v1
kind: Service
metadata:
  name: grafana
  namespace: monitoring
spec:
  ports:
  - port: 3000
    targetPort: 3000
  selector:
    app: grafana
  type: ClusterIP

---

apiVersion: v1
kind: Service
metadata:
  name: loki
  namespace: monitoring
spec:
  ports:
  - port: 3100
    targetPort: 3100
  selector:
    app: loki
  type: ClusterIP

---

apiVersion: v1
kind: Service
metadata:
  name: cadvisor
  namespace: monitoring
spec:
  ports:
  - port: 8080
    targetPort: 8080
  selector:
    app: cadvisor
  type: ClusterIP
